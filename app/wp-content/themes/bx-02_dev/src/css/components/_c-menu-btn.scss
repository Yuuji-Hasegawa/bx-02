@use '../settings' as setting;
@use '../tools' as tool;
.c-menu-btn {
  width: 35px;
  height: 30px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  &\:sidebar {
    margin: 20px clamp(setting.spaces(2xs), calc(3.5vw - setting.spaces(base)), setting.spaces(base)) 20px auto;
  }
  &__bars {
    position: relative;
    width: 100%;
    height: 2px;
    background: #fff;
    transition: all ease-out 0.3s;
    &::before,
    &::after {
      content: '';
      background-color: #fff;
      height: 2px;
      width: 100%;
      position: absolute;
      left: 0;
      transition: all ease-out 0.3s;
    }
    &::before {
      top: -11px;
    }
    &::after {
      bottom: -11px;
    }
    .o-container\:is-header-scroll & {
      background: var(--c-txt);
      &::before,
      &::after {
        background: var(--c-txt);
      }
    }
    .c-menu-btn\:is-open & {
      background: transparent;
      &::before {
        top: 0;
        transform: rotate(-45deg);
      }
      &::after {
        transform: rotate(45deg);
        bottom: 0;
      }
    }
  }
}
.c-head-nav {
}
.c-gnav {
  display: flex;
  gap: setting.spaces(s);
  flex-wrap: wrap;
  &__item {
  }
  &__link {
    padding: setting.spaces(xs) setting.spaces(s);
    color: var(--c-txt);
    display: block;
    font-weight: setting.fontweight(b);
  }
}
.c-sidebar {
  position: fixed;
  top: 0;
  right: -240px;
  z-index: 1000;
  box-shadow: 0 0 2px setting.lightcolor(overlay);
  background: setting.brandcolor(base);
  width: 100%;
  height: 100vh;
  max-width: 240px;
  pointer-events: none;
  transition: right setting.animes(duration) setting.animes(timing);
  &\:is-open {
    right: 0;
    pointer-events: auto;
    transition: right setting.animes(duration) setting.animes(timing);
  }
  &-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 998;
    background: setting.brandcolor(light);
    display: none;
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    transition: opacity setting.animes(duration) setting.animes(timing);
    .c-sidebar\:is-open + & {
      pointer-events: auto;
      display: block;
      visibility: visible;
      opacity: setting.animes(opacity);
      cursor: pointer;
      transition: opacity setting.animes(duration) setting.animes(timing);
    }
  }
}
body.is-fixed {
  position: fixed;
  min-height: 100vh;
  overflow: hidden;
  min-width: 100vw;
}
